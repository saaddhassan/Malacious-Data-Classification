{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Malicious data classification _ versionFinal.ipynb",
      "provenance": [],
      "collapsed_sections": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "metadata": {
        "id": "7mDy1RhuULgs",
        "colab_type": "code",
        "outputId": "8eada003-2d1e-4a8c-aec9-8ab2256338cf",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        }
      },
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/gdrive')"
      ],
      "execution_count": 52,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Drive already mounted at /content/gdrive; to attempt to forcibly remount, call drive.mount(\"/content/gdrive\", force_remount=True).\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "RtVtYWxUUYf_",
        "colab_type": "text"
      },
      "source": [
        "# Importing Libraries"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "i0LhPA3FWFg5",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "%tensorflow_version 1.x\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "import tensorflow as tf\n",
        "\n",
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.preprocessing import Normalizer,StandardScaler\n",
        "from sklearn.metrics import accuracy_score"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "NPnIrn1JXPv_",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# roc curve and auc\n",
        "from sklearn.datasets import make_classification\n",
        "from sklearn.linear_model import LogisticRegression\n",
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.metrics import roc_curve\n",
        "from sklearn.metrics import roc_auc_score\n",
        "from matplotlib import pyplot"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ftKsnfpMUnP4",
        "colab_type": "text"
      },
      "source": [
        "# Constructing Dataset"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "4Ofr1aHcUhm7",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# Converting raw data into feature and values\n",
        "rawData = open(\"/content/gdrive/My Drive/dataset.train\", \"r\")\n",
        "rawdataset = []\n",
        "for row in rawData:\n",
        "    rawdataset.append(row)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "bMEx0nehUpen",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "dataset = []\n",
        "for row in rawdataset:\n",
        "    temprow = np.zeros(532)\n",
        "    \n",
        "    for index in range(1,len(row.split())-1):\n",
        "        temprow[int(row.split()[index].split(':')[0])-1]=1\n",
        "    \n",
        "    if (row.split()[0].split(':')[0]=='+1'):\n",
        "        temprow[531]=1                            # We add the label 1 as this row represents malicious data\n",
        "    else:\n",
        "        temprow[531]=0                            # We add the label 0 as this row represents non malicious data\n",
        "    \n",
        "    dataset.append(temprow)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "_cfKjLSXUuSQ",
        "colab_type": "code",
        "outputId": "f94c1805-8977-4b31-cbef-3b697750c290",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        }
      },
      "source": [
        "print(\"Shape of our constructed dataset from the raw data is : \", np.shape(dataset))"
      ],
      "execution_count": 108,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Shape of our constructed dataset from the raw data is :  (373, 532)\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "EPO1BtETUxQk",
        "colab_type": "text"
      },
      "source": [
        "# Data points and the truth values"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "_1EhBBMMUxsk",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "dataset = np.array(dataset)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "KOUWxsRKUy_g",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "X = dataset[:,:531]\n",
        "y = dataset[:,531:]"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "zNmEbWJZU0LU",
        "colab_type": "code",
        "outputId": "c779b035-c530-4d2b-e8bb-a1da6148a489",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 51
        }
      },
      "source": [
        "print(\"Shape of X data points is : \", np.shape(X))\n",
        "print(\"Shape of y truth values is : \", np.shape(y))"
      ],
      "execution_count": 111,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Shape of X data points is :  (373, 531)\n",
            "Shape of y truth values is :  (373, 1)\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "eXqsE49AU4o1",
        "colab_type": "text"
      },
      "source": [
        "# Normalization of Data"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "VayfQSKHU1cT",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "X = StandardScaler().fit_transform(X)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "O6VH4ktVU6aP",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "X = Normalizer().fit_transform(X)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "gODPM0-CU7Wx",
        "colab_type": "code",
        "outputId": "cf4ff52b-1f4a-4823-d33b-6b47d01b2549",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 136
        }
      },
      "source": [
        "print(\"The 50 values in the first data point are : \\n\\n\",X[0][0:50])"
      ],
      "execution_count": 114,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "The 50 values in the first data point are : \n",
            "\n",
            " [ 0.    0.    0.   -0.    0.    0.    0.    0.    0.    0.    0.    0.\n",
            "  0.08  0.    0.02  0.   -0.    0.    0.05 -0.05  0.07  0.   -0.01  0.14\n",
            " -0.01  0.01 -0.01  0.    0.07 -0.07  0.07  0.    0.02  0.   -0.    0.08\n",
            " -0.08  0.08 -0.08 -0.    0.09 -0.08  0.09 -0.09  0.09 -0.    0.07 -0.\n",
            " -0.06  0.06]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "O77KxTC6U_Uy",
        "colab_type": "text"
      },
      "source": [
        "# Constructing train and test part of the dataset"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Sj3WoHysU_qI",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.30, random_state=42)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "CehEC7GYVD_S",
        "colab_type": "code",
        "outputId": "c3b71a2c-0b62-4fed-a612-dd9dcc9d58b0",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 51
        }
      },
      "source": [
        "print(\"Shape of X_train data points is : \", np.shape(X_train))\n",
        "print(\"Shape of y_train truth values is : \", np.shape(y_train))"
      ],
      "execution_count": 116,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Shape of X_train data points is :  (261, 531)\n",
            "Shape of y_train truth values is :  (261, 1)\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ryslK7kjVFSj",
        "colab_type": "code",
        "outputId": "f6636bfb-edb0-4fb1-e1f2-c2461c07dfb1",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 51
        }
      },
      "source": [
        "print(\"Shape of X_test data points is : \", np.shape(X_test))\n",
        "print(\"Shape of y_test truth values is : \", np.shape(y_test))"
      ],
      "execution_count": 117,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Shape of X_test data points is :  (112, 531)\n",
            "Shape of y_test truth values is :  (112, 1)\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "zW2_522jVI-F",
        "colab_type": "text"
      },
      "source": [
        "# Training for our model"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "893dmFieVJPz",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "\n",
        "from keras import Sequential\n",
        "from keras.layers import Dense\n",
        "from keras.layers.normalization import BatchNormalization\n",
        "from keras.callbacks import EarlyStopping,ModelCheckpoint\n"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "8efHXJ93VL6l",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "model = Sequential()\n",
        "\n",
        "model.add(Dense(1024, activation='relu', kernel_initializer='random_normal', input_dim=531))\n",
        "model.add(Dense(2048, activation='relu', kernel_initializer='random_normal'))\n",
        "model.add(Dense(4096, activation='relu', kernel_initializer='random_normal'))\n",
        "model.add(BatchNormalization())\n",
        "model.add(Dense(4096, activation='relu', kernel_initializer='random_normal'))\n",
        "model.add(Dense(2048, activation='relu', kernel_initializer='random_normal'))\n",
        "model.add(BatchNormalization())\n",
        "model.add(Dense(1024, activation='relu', kernel_initializer='random_normal'))\n",
        "\n",
        "#Output Layer\n",
        "model.add(Dense(1, activation='sigmoid', kernel_initializer='random_normal'))\n",
        "\n",
        "#Compiling the neural network\n",
        "model.compile(optimizer ='adam',loss='binary_crossentropy', metrics =['accuracy'])"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "s2nOreaJYtvz",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "modelCheckpointing = ModelCheckpoint('/content/gdrive/My Drive/best_model_maliciousDataClassification.h5', monitor='val_loss', mode='min', save_best_only=True,verbose=1)\n",
        "earlyStopping = EarlyStopping(monitor='val_loss', mode='min',patience=10,verbose=1)\n"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "viHff8BVVN02",
        "colab_type": "code",
        "outputId": "54d967d3-7cf1-40df-ed51-dd73aedd4c54",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 802
        }
      },
      "source": [
        "#Fitting the data to the training dataset\n",
        "modelHistory = model.fit(X_train,y_train, validation_data=(X_test, y_test),batch_size=256, epochs=100, callbacks=[earlyStopping,modelCheckpointing])"
      ],
      "execution_count": 121,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Train on 261 samples, validate on 112 samples\n",
            "Epoch 1/100\n",
            "261/261 [==============================] - 7s 26ms/step - loss: 1.6438 - acc: 0.3525 - val_loss: 0.1423 - val_acc: 0.9911\n",
            "\n",
            "Epoch 00001: val_loss improved from inf to 0.14234, saving model to /content/gdrive/My Drive/best_model_maliciousDataClassification.h5\n",
            "Epoch 2/100\n",
            "261/261 [==============================] - 3s 13ms/step - loss: 4.1992e-04 - acc: 1.0000 - val_loss: 0.1423 - val_acc: 0.9911\n",
            "\n",
            "Epoch 00002: val_loss did not improve from 0.14234\n",
            "Epoch 3/100\n",
            "261/261 [==============================] - 3s 13ms/step - loss: 1.5362e-05 - acc: 1.0000 - val_loss: 0.1423 - val_acc: 0.9911\n",
            "\n",
            "Epoch 00003: val_loss did not improve from 0.14234\n",
            "Epoch 4/100\n",
            "261/261 [==============================] - 4s 15ms/step - loss: 9.8558e-07 - acc: 1.0000 - val_loss: 0.1423 - val_acc: 0.9911\n",
            "\n",
            "Epoch 00004: val_loss did not improve from 0.14234\n",
            "Epoch 5/100\n",
            "261/261 [==============================] - 3s 13ms/step - loss: 4.7125e-07 - acc: 1.0000 - val_loss: 0.1423 - val_acc: 0.9911\n",
            "\n",
            "Epoch 00005: val_loss did not improve from 0.14234\n",
            "Epoch 6/100\n",
            "261/261 [==============================] - 3s 12ms/step - loss: 2.0102e-07 - acc: 1.0000 - val_loss: 0.1423 - val_acc: 0.9911\n",
            "\n",
            "Epoch 00006: val_loss did not improve from 0.14234\n",
            "Epoch 7/100\n",
            "261/261 [==============================] - 3s 13ms/step - loss: 1.3948e-07 - acc: 1.0000 - val_loss: 0.1423 - val_acc: 0.9911\n",
            "\n",
            "Epoch 00007: val_loss did not improve from 0.14234\n",
            "Epoch 8/100\n",
            "261/261 [==============================] - 3s 12ms/step - loss: 1.1231e-07 - acc: 1.0000 - val_loss: 0.1423 - val_acc: 0.9911\n",
            "\n",
            "Epoch 00008: val_loss did not improve from 0.14234\n",
            "Epoch 9/100\n",
            "261/261 [==============================] - 3s 12ms/step - loss: 1.1326e-07 - acc: 1.0000 - val_loss: 0.1423 - val_acc: 0.9911\n",
            "\n",
            "Epoch 00009: val_loss did not improve from 0.14234\n",
            "Epoch 10/100\n",
            "261/261 [==============================] - 3s 12ms/step - loss: 1.0999e-07 - acc: 1.0000 - val_loss: 0.1423 - val_acc: 0.9911\n",
            "\n",
            "Epoch 00010: val_loss did not improve from 0.14234\n",
            "Epoch 11/100\n",
            "261/261 [==============================] - 3s 12ms/step - loss: 1.0642e-07 - acc: 1.0000 - val_loss: 0.1423 - val_acc: 0.9911\n",
            "\n",
            "Epoch 00011: val_loss did not improve from 0.14234\n",
            "Epoch 00011: early stopping\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "uptwwJ_xar48",
        "colab_type": "text"
      },
      "source": [
        "## Training History"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "SsgT77kWZrSL",
        "colab_type": "code",
        "outputId": "f4347f62-7121-4bc2-82a2-1918c3cd68bd",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 264
        }
      },
      "source": [
        "# plot training history\n",
        "pyplot.plot(modelHistory.history['loss'], label='train')\n",
        "pyplot.plot(modelHistory.history['val_loss'], label='test')\n",
        "pyplot.legend()\n",
        "pyplot.show()"
      ],
      "execution_count": 122,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAXoAAAD4CAYAAADiry33AAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjEsIGh0\ndHA6Ly9tYXRwbG90bGliLm9yZy+j8jraAAAa0klEQVR4nO3df3TV9Z3n8ec7ISHmXoQk92ILIZB7\nh9OCtaJGiuN0RseqaGfBnnY9aJ115rSlu6dOZ2e33eJu1ak9e9bZndNxe+qPUpdpZzvFWuzMMFsc\noRWXnlNpCZatiFogVQlWCUFQfpPw3j/u94ZLyI8b8s398f2+Hufk5N7vr7xvq698/H4/eX/M3RER\nkeiqKXcBIiIysRT0IiIRp6AXEYk4Bb2ISMQp6EVEIm5SuQsYSiqV8jlz5pS7DBGRqrF169b97p4e\nal9FBv2cOXPo7OwsdxkiIlXDzF4bbp9u3YiIRJyCXkQk4hT0IiIRV5H36EVExurUqVN0d3dz/Pjx\ncpcyoRoaGmhtbaWurq7ocxT0IhIJ3d3dTJkyhTlz5mBm5S5nQrg7vb29dHd3097eXvR5unUjIpFw\n/PhxWlpaIhvyAGZGS0vLmP+rRUEvIpER5ZDPO5/PGJmg7+s/zUMbd/F/f91T7lJERCpKZIK+tsZY\nuamLp198s9yliEgMHTx4kIcffnjM5918880cPHhwAio6IzJBb2Zk0gm6eg6XuxQRiaHhgr6vr2/E\n89atW8e0adMmqiwgQkEPkE0n2d1zpNxliEgMrVixgt27d7NgwQKuvPJKPvzhD7NkyRLmz58PwC23\n3MIVV1zBxRdfzMqVKwfOmzNnDvv37+fVV19l3rx5fOYzn+Hiiy/mhhtu4NixY6HUFqnplZl0gjVb\nu3n3+CmmNBQ/x1REouUr//wiO954J9Rrzp9xIff9q4uH3f/AAw+wfft2tm3bxrPPPstHP/pRtm/f\nPjANctWqVTQ3N3Ps2DGuvPJKPv7xj9PS0nLWNXbu3Mnq1av51re+xa233sqTTz7JHXfcMe7aIzei\nB+jSqF5EymzhwoVnzXX/+te/zqWXXsqiRYvYs2cPO3fuPOec9vZ2FixYAMAVV1zBq6++GkotkRrR\nZ9MJAHb3HObSWRN7z0tEKtdII+9SSSQSA6+fffZZfvzjH/Pcc8/R2NjINddcM+Rc+MmTJw+8rq2t\nDe3WTaRG9G3NCWprTCN6ESm5KVOm8O677w6579ChQzQ1NdHY2MjLL7/M5s2bS1pbpEb09ZNqaGtu\nZLdm3ohIibW0tHD11VfzgQ98gAsuuICLLrpoYN/ixYt59NFHmTdvHu973/tYtGhRSWuLVNADZFIJ\njehFpCy+973vDbl98uTJPPXUU0Puy9+HT6VSbN++fWD7F77whdDqitStG4Ds9CS/6T1C/2kvdyki\nIhUhckGfSSU42XeavW+H8xBDRKTaRS7os9NzUyx379d9ehERiGDQZ1LBFMt9CnoREYhg0Dcn6pnW\nWEfXfj2QFRGBIoLezFaZ2T4z2z7M/mvM7JCZbQu+7i3Yt9jMXjGzXWa2IszCR6iXTCqhEb2ISKCY\nEf23gcWjHPNTd18QfN0PYGa1wEPATcB84DYzmz+eYouVSSc1oheRkjrfNsUADz74IEePHg25ojNG\nDXp33wQcOI9rLwR2uXuXu58EHgeWnsd1xiybTtLz7gneOX6qFD9ORKSigz6sP5i6ysz+H/AG8AV3\nfxGYCewpOKYb+FBIP29EmaDnTVfPERao542IlEBhm+Lrr7+e6dOn88QTT3DixAk+9rGP8ZWvfIUj\nR45w66230t3dTX9/P/fccw9vvfUWb7zxBtdeey2pVIqNGzeGXlsYQf88MNvdD5vZzcA/AnPHehEz\nWw4sB2hraxtXQWe6WB5W0IvE0VMr4M0Xwr3mey6Bmx4Ydndhm+L169ezZs0afvGLX+DuLFmyhE2b\nNtHT08OMGTP40Y9+BOR64EydOpWvfe1rbNy4kVQqFW7NgXHPunH3d9z9cPB6HVBnZilgLzCr4NDW\nYNtw11np7h3u3pFOp8dVU1tzI7U1pp43IlIW69evZ/369Vx22WVcfvnlvPzyy+zcuZNLLrmEDRs2\n8KUvfYmf/vSnTJ06tST1jHtEb2bvAd5ydzezheR+efQCB4G5ZtZOLuCXAbeP9+cVo35SDbObG9Xz\nRiSuRhh5l4K7c/fdd/PZz372nH3PP/8869at48tf/jLXXXcd99577xBXCNeoQW9mq4FrgJSZdQP3\nAXUA7v4o8Ang35lZH3AMWObuDvSZ2V3A00AtsCq4d18SmXRCI3oRKZnCNsU33ngj99xzD5/85CdJ\nJpPs3buXuro6+vr6aG5u5o477mDatGk89thjZ507UbduRg16d79tlP3fAL4xzL51wLrzK218Mukk\nm3bup/+0U1tj5ShBRGKksE3xTTfdxO23385VV10FQDKZ5Lvf/S67du3ii1/8IjU1NdTV1fHII48A\nsHz5chYvXsyMGTMm5GGs5QbflaWjo8M7OzvHdY3vb3mdLz35Apu+eC1tLY0hVSYileqll15i3rx5\n5S6jJIb6rGa21d07hjo+ci0Q8jLBzBvdvhGRuIts0GcV9CIiQISDPt/cbLdm3ojERiXeig7b+XzG\nyAY95Eb1XRrRi8RCQ0MDvb29kQ57d6e3t5eGhoYxnRe5NWMLZVIJNr7SU+4yRKQEWltb6e7upqcn\n2v/ONzQ00NraOqZzoh306SQ/2NrNO8dPcWFDXbnLEZEJVFdXR3t7e7nLqEgRv3VzprmZiEhcRTro\nB6ZYahESEYmxSAf97JZGJtUYXVooXERiLNJBX1dbQ1tzI7v36daNiMRXpIMe8ssKakQvIvEV+aDP\nphO8uv8o/aejO7dWRGQkkQ/6TDrByf7TdL89cesxiohUssgH/ZllBXWfXkTiKfJBry6WIhJ3kQ/6\n5kQ9TWpuJiIxFvmgh9yoXiN6EYmrWAR9Np3QPXoRia1YBH0mnWT/4RMcOnaq3KWIiJRcPII+lW9u\npts3IhI/owa9ma0ys31mtn2Y/Z80s1+Z2Qtm9jMzu7Rg36vB9m1mNr7VvschO11TLEUkvooZ0X8b\nWDzC/t8Af+DulwBfBVYO2n+tuy8YbnXyUmhrzjU30wNZEYmjURcecfdNZjZnhP0/K3i7GRjb0icl\nUFdbQ1tLo0b0IhJLYd+j/xTwVMF7B9ab2VYzWx7yzxqTTEpTLEUknkJbStDMriUX9L9XsPn33H2v\nmU0HNpjZy+6+aZjzlwPLAdra2sIqa0B2eoJNv+6h/7RTW2OhX19EpFKFMqI3sw8CjwFL3b03v93d\n9wbf9wH/ACwc7hruvtLdO9y9I51Oh1HWWbKppJqbiUgsjTvozawN+CHwx+7+64LtCTObkn8N3AAM\nOXOnFDLB+rG6fSMicTPqrRszWw1cA6TMrBu4D6gDcPdHgXuBFuBhMwPoC2bYXAT8Q7BtEvA9d/+X\nCfgMRSnsYvmH7y9XFSIipVfMrJvbRtn/aeDTQ2zvAi4994zyaBpobqYRvYjESyz+MjYvm06qi6WI\nxE6sgj6j5mYiEkOxCvqsmpuJSAzFKugzAw9kdZ9eROIjZkGfn2Kp2zciEh+xCvp8czON6EUkTmIV\n9PnmZppiKSJxEqugh9wDWc28EZE4iV3QZ9IJXus9Sl//6XKXIiJSErEL+mw639zsWLlLEREpiRgG\nfbB+7H7dpxeReIhd0GdSubn0u/fpPr2IxEPsgr4pUU9zol4jehGJjdgFPUAmldCIXkRiI5ZBn00n\nNaIXkdiIZdBn0gn2Hz7JoaNqbiYi0RfLoM+vNrVbo3oRiYFYBn2+uZn+QlZE4iCWQT8raG6mnjci\nEgexDPq62hpmtzSqi6WIxEIsgx5yi5CoL72IxEFsgz6bTvJa7xE1NxORyCsq6M1slZntM7Ptw+w3\nM/u6me0ys1+Z2eUF++40s53B151hFT5emXSCU/2u5mYiEnnFjui/DSweYf9NwNzgaznwCICZNQP3\nAR8CFgL3mVnT+RYbpoEplrpPLyIRV1TQu/sm4MAIhywF/s5zNgPTzOy9wI3ABnc/4O5vAxsY+RdG\nyWQ1xVJEYiKse/QzgT0F77uDbcNtP4eZLTezTjPr7OnpCams4U1rzDU304heRKKuYh7GuvtKd+9w\n9450Ol2Sn5lNJzSiF5HICyvo9wKzCt63BtuG214RMik1NxOR6Asr6NcC/yaYfbMIOOTuvwWeBm4w\ns6bgIewNwbaKkJ2u5mYiEn2TijnIzFYD1wApM+smN5OmDsDdHwXWATcDu4CjwJ8G+w6Y2VeBLcGl\n7nf3kR7qltTAalP7D3N5W0VMBhIRCV1RQe/ut42y34HPDbNvFbBq7KVNvOz0/LKCCnoRia6KeRhb\nDrOaLqCu1ujarweyIhJdsQ76SbU1tDU3snufHsiKSHTFOughv6ygRvQiEl2xD/qMmpuJSMTFPuiz\nQXOzPWpuJiIRFfugzwTNzbQIiYhEVeyDPt/cTD1vRCSqYh/00xrraUnUq+eNiERW7IMecouQaEQv\nIlGloCeYYqkRvYhElIKe3Ii+98hJDh49We5SRERCp6CncFlBjepFJHoU9GiKpYhEm4KeM83NNKIX\nkShS0JNrbja7JaERvYhEkoI+kEkl1NxMRCJJQR/ITldzMxGJJgV9IJNSczMRiSYFfaBwWUERkShR\n0AeywULhXfsV9CISLQr6wNTGOloS9ezepweyIhItRQW9mS02s1fMbJeZrRhi/9+Y2bbg69dmdrBg\nX3/BvrVhFh+23LKCGtGLSLRMGu0AM6sFHgKuB7qBLWa21t135I9x978oOP7PgMsKLnHM3ReEV/LE\nyaQTbNjxVrnLEBEJVTEj+oXALnfvcveTwOPA0hGOvw1YHUZxpZZNJ9XcTEQip5ignwnsKXjfHWw7\nh5nNBtqBZwo2N5hZp5ltNrNbhvshZrY8OK6zp6eniLLClxlYbUr36UUkOsJ+GLsMWOPu/QXbZrt7\nB3A78KCZZYc60d1XunuHu3ek0+mQyyrOmS6Wuk8vItFRTNDvBWYVvG8Ntg1lGYNu27j73uB7F/As\nZ9+/ryitQXMzLUIiIlFSTNBvAeaaWbuZ1ZML83Nmz5jZ+4Em4LmCbU1mNjl4nQKuBnYMPrdS5Jub\naUQvIlEy6qwbd+8zs7uAp4FaYJW7v2hm9wOd7p4P/WXA4+7uBafPA75pZqfJ/VJ5oHC2TiXKphPs\n0l/HikiEjBr0AO6+Dlg3aNu9g97/5RDn/Qy4ZBz1lVwmneSZl/dxqv80dbX6ezIRqX5KskGy6WSu\nudmBo+UuRUQkFAr6QfJTLPVAVkSiQkE/SL65mR7IikhUKOgHmdpYRypZrxG9iESGgn4ImVRSI3oR\niQwF/RCy07V+rIhEh4J+CJlUkgNHTvL2ETU3E5Hqp6AfQnZ6MPNGvelFJAIU9EPIDMy80e0bEal+\nCvohtDZdQH1tjR7IikgkKOiHkGtu1qgpliISCQr6YWTSCbo0oheRCFDQDyObTvJa71FO9Z8udyki\nIuOioB9GJp2k77Sam4lI9VPQDyOr9WNFJCIU9MPIBOvH6j69iFQ7Bf0wpl5QRyo5WVMsRaTqKehH\nkJt5o1s3IlLdFPQjyKbV3ExEqp+CfgTZtJqbiUj1U9CPYGBZQTU3E5EqVlTQm9liM3vFzHaZ2Yoh\n9v+JmfWY2bbg69MF++40s53B151hFj/RssHMm937dPtGRKrXpNEOMLNa4CHgeqAb2GJma919x6BD\nv+/udw06txm4D+gAHNganPt2KNVPsNamxlxzM43oRaSKFTOiXwjscvcudz8JPA4sLfL6NwIb3P1A\nEO4bgMXnV2rp1dYYc1KNGtGLSFUrJuhnAnsK3ncH2wb7uJn9yszWmNmsMZ6LmS03s04z6+zp6Smi\nrNLIpJK6Ry8iVS2sh7H/DMxx9w+SG7V/Z6wXcPeV7t7h7h3pdDqkssYvk07wupqbiUgVKybo9wKz\nCt63BtsGuHuvu58I3j4GXFHsuZUuGzQ3e13NzUSkShUT9FuAuWbWbmb1wDJgbeEBZvbegrdLgJeC\n108DN5hZk5k1ATcE26rGwBRL/YWsiFSpUWfduHufmd1FLqBrgVXu/qKZ3Q90uvta4PNmtgToAw4A\nfxKce8DMvkrulwXA/e5+YAI+x4TJNzfb3XOY67mozNWIiIzdqEEP4O7rgHWDtt1b8Ppu4O5hzl0F\nrBpHjWWVb26mLpYiUq30l7FFyKq5mYhUMQV9ETLppNoVi0jVUtAXIZtO8PbRUxxQczMRqUIK+iJk\ntdqUiFQxBX0RNMVSRKqZgr4IA83NNKIXkSqkoC/CQHMzjehFpAop6IuUTau5mYhUJwV9kdTcTESq\nlYK+SJmUmpuJSHVS0BcpOz2/rKBu34hIdVHQF+nMQuF6ICsi1UVBX6QLG+pIT5msEb2IVB0F/Rhk\nUgmN6EWk6ijoxyA7Pak2CCJSdRT0Y5BJqbmZiFQfBf0YqLmZiFQjBf0YZAuWFRQRqRYK+jGY2XQB\n9ZNq1MVSRKqKgn4MamuM9paERvQiUlUU9GOU0fqxIlJligp6M1tsZq+Y2S4zWzHE/v9gZjvM7Fdm\n9hMzm12wr9/MtgVfa8Msvhyy6SSvH1BzMxGpHqMGvZnVAg8BNwHzgdvMbP6gw34JdLj7B4E1wH8v\n2HfM3RcEX0tCqrtsMukEfaed13rV3ExEqkMxI/qFwC5373L3k8DjwNLCA9x9o7vnk28z0BpumZUj\noymWIlJlign6mcCegvfdwbbhfAp4quB9g5l1mtlmM7tluJPMbHlwXGdPT08RZZVHvrmZVpsSkWox\nKcyLmdkdQAfwBwWbZ7v7XjPLAM+Y2Qvuvnvwue6+ElgJ0NHR4WHWFaZ8czON6EWkWhQzot8LzCp4\n3xpsO4uZfQT4L8ASdz+R3+7ue4PvXcCzwGXjqLciZNNqbiYi1aOYoN8CzDWzdjOrB5YBZ82eMbPL\ngG+SC/l9BdubzGxy8DoFXA3sCKv4csmkk5pLLyJVY9RbN+7eZ2Z3AU8DtcAqd3/RzO4HOt19LfA/\ngCTwAzMDeD2YYTMP+KaZnSb3S+UBd6/6oM+mkxwMmps1J+rLXY6IyIiKukfv7uuAdYO23Vvw+iPD\nnPcz4JLxFFiJzjyQPUxzornM1YiIjEx/GXsesilNsRSR6qGgPw/55maaYiki1UBBfx7yzc00oheR\naqCgP0/Z6WpuJiLVQUF/njKpJK8dOMrJPjU3E5HKpqA/T9npCfpPO68fUHMzEalsobZAKLunVsCb\nL5TkR11/oo/H6w/R/IMHoVFz6UUkBO+5BG56IPTLakR/nhrqcv/THTvZX+ZKRERGFq0R/QT8JhzO\nJODz//XH/H5rmr/+15eW7OeKiIyVRvTjkFtWUFMsRaSyKejHIZtOsrvnCO4V21VZRERBPx6ZdJJD\nx3LNzUREKpWCfhyyQXMz9aYXkUqmoB+HbLB+7O59uk8vIpVLQT8OM6blmptpRC8ilUxBPw61NUYm\nldCIXkQqmoJ+nDJaP1ZEKpyCfpyy6SSvq7mZiFQwBf04ZdL55mYa1YtIZVLQj9PAzBv1pheRCqWg\nH6f21JmFwkVEKlFRQW9mi83sFTPbZWYrhtg/2cy+H+z/uZnNKdh3d7D9FTO7MbzSK8OUhjqmT5ms\n1aZEpGKNGvRmVgs8BNwEzAduM7P5gw77FPC2u/8O8DfAXwXnzgeWARcDi4GHg+tFSjadVHMzEalY\nxbQpXgjscvcuADN7HFgK7Cg4Zinwl8HrNcA3zMyC7Y+7+wngN2a2K7jec+GUXxky6QSPb9nD7/63\nnwxsy338s+U3Fe4ybIht517Dznkx9HGlVr6fLBI9TY31PPFvrwr9usUE/UxgT8H7buBDwx3j7n1m\ndghoCbZvHnTuzKF+iJktB5YDtLW1FVN7xbhj0Wz6+p3T7hT2scw3tTxrq5/1LTjOh9h2zilndcn0\nc16Unpfzh4tE0IUNdRNy3YpZeMTdVwIrATo6OqoqQea990L+6hMfLHcZIiJDKuZh7F5gVsH71mDb\nkMeY2SRgKtBb5LkiIjKBign6LcBcM2s3s3pyD1fXDjpmLXBn8PoTwDOeu8+wFlgWzMppB+YCvwin\ndBERKcaot26Ce+53AU8DtcAqd3/RzO4HOt19LfC/gP8dPGw9QO6XAcFxT5B7cNsHfM7dtZq2iEgJ\nWSUug9fR0eGdnZ3lLkNEpGqY2VZ37xhqn/4yVkQk4hT0IiIRp6AXEYk4Bb2ISMRV5MNYM+sBXjvP\n01PA/hDLqQb6zNEXt88L+sxjNdvd00PtqMigHw8z6xzuyXNU6TNHX9w+L+gzh0m3bkREIk5BLyIS\ncVEM+pXlLqAM9JmjL26fF/SZQxO5e/QiInK2KI7oRUSkgIJeRCTiIhP0oy1gHjVmNsvMNprZDjN7\n0cz+vNw1lYqZ1ZrZL83s/5S7llIws2lmtsbMXjazl8ws/LXmKoyZ/UXwz/V2M1ttZg3lrilsZrbK\nzPaZ2faCbc1mtsHMdgbfm8L4WZEI+iIXMI+aPuA/uvt8YBHwuRh85rw/B14qdxEl9D+Bf3H39wOX\nEvHPbmYzgc8DHe7+AXLt0ZeVt6oJ8W1g8aBtK4CfuPtc4CfB+3GLRNBTsIC5u58E8guYR5a7/9bd\nnw9ev0vuX/4h1+ONEjNrBT4KPFbuWkrBzKYCv09uzQfc/aS7HyxvVSUxCbggWLGuEXijzPWEzt03\nkVu/o9BS4DvB6+8At4Txs6IS9EMtYB750MszsznAZcDPy1tJSTwI/CfgdLkLKZF2oAf42+B21WNm\nlih3URPJ3fcCfw28DvwWOOTu68tbVclc5O6/DV6/CVwUxkWjEvSxZWZJ4Eng37v7O+WuZyKZ2R8B\n+9x9a7lrKaFJwOXAI+5+GXCEkP5zvlIF96WXkvslNwNImNkd5a2q9ILlWEOZ/x6VoI/lIuRmVkcu\n5P/e3X9Y7npK4GpgiZm9Su723B+a2XfLW9KE6wa63T3/X2tryAV/lH0E+I2797j7KeCHwO+WuaZS\necvM3gsQfN8XxkWjEvTFLGAeKWZm5O7bvuTuXyt3PaXg7ne7e6u7zyH3//Ez7h7pkZ67vwnsMbP3\nBZuuI7cGc5S9Diwys8bgn/PriPgD6AJrgTuD13cC/xTGRUddHLwaDLeAeZnLmmhXA38MvGBm24Jt\n/9nd15WxJpkYfwb8fTCI6QL+tMz1TCh3/7mZrQGeJze77JdEsB2Cma0GrgFSZtYN3Ac8ADxhZp8i\n16r91lB+llogiIhEW1Ru3YiIyDAU9CIiEaegFxGJOAW9iEjEKehFRCJOQS8iEnEKehGRiPv/DPC9\n7qkj9asAAAAASUVORK5CYII=\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "LNCJks0_avN6",
        "colab_type": "text"
      },
      "source": [
        "## Evaluating our model"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "2983SVAXWqfc",
        "colab_type": "code",
        "outputId": "e333931a-f8bf-45c3-cd29-dfc9ca4aad05",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 51
        }
      },
      "source": [
        "eval_model=model.evaluate(X_train, y_train)\n",
        "eval_model"
      ],
      "execution_count": 123,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "261/261 [==============================] - 1s 3ms/step\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[1.0360636959004292e-07, 1.0]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 123
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "tyAMUVCbWr7Q",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "y_pred=model.predict(X_test)\n",
        "y_pred =(y_pred>0.5)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "yI_BMJDwWtHs",
        "colab_type": "code",
        "outputId": "8f3d222a-71d3-480b-a500-986b785354af",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        }
      },
      "source": [
        "print(\"Accuracy Score:\",accuracy_score(y_test, y_pred))"
      ],
      "execution_count": 125,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Accuracy Score: 0.9910714285714286\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "4JgsTM0jXBem",
        "colab_type": "text"
      },
      "source": [
        "# ROC and AUC for model"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "_V6o4mukXEKm",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# calculate roc curve\n",
        "fpr, tpr, thresholds = roc_curve(y_test, y_pred)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "B-kSYQEsXFr8",
        "colab_type": "code",
        "outputId": "8f46228d-e619-4b35-b365-adaea4632862",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        }
      },
      "source": [
        "# calculate AUC\n",
        "auc = roc_auc_score(y_test, y_pred)\n",
        "print('AUC score for the model: ' + str(auc))"
      ],
      "execution_count": 127,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "AUC score for the model: 0.9943820224719101\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Q5wbVNVeXTKK",
        "colab_type": "text"
      },
      "source": [
        "## ROC curve for no-skill and the model"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "6Sd4YEeCXTnM",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# Generating NO-SKILL probabilities which predict fixed out for every data point\n",
        "ns_probs = [0 for _ in range(len(y_test))]\n",
        "\n",
        "# Generating our trained model probabilities\n",
        "lr_probs = model.predict_proba(X_test)\n"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "tYiBKgOKXWEn",
        "colab_type": "code",
        "outputId": "b347ef15-6fb1-411d-9ca7-3927eecb79e5",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 51
        }
      },
      "source": [
        "# ROC AUC FOR BOTH\n",
        "ns_auc = roc_auc_score(y_test, ns_probs)\n",
        "lr_auc = roc_auc_score(y_test, lr_probs)\n",
        "print('No Skill : ROC AUC= ' +str(ns_auc))\n",
        "print('ANN Model: ROC AUC= '+str(lr_auc))"
      ],
      "execution_count": 129,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "No Skill : ROC AUC= 0.5\n",
            "ANN Model: ROC AUC= 0.9943820224719101\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "T9wnE11-XhEX",
        "colab_type": "code",
        "outputId": "2a1a5a48-e7a7-40d6-d4ae-e5b56f49ff55",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 279
        }
      },
      "source": [
        "\n",
        "# calculate roc curves\n",
        "ns_fpr, ns_tpr, _ = roc_curve(y_test, ns_probs)\n",
        "lr_fpr, lr_tpr, _ = roc_curve(y_test, lr_probs)\n",
        "# plot the roc curve for the model\n",
        "pyplot.plot(ns_fpr, ns_tpr, linestyle='--', label='No Skill')\n",
        "pyplot.plot(lr_fpr, lr_tpr, marker='.', label='ANN Model')\n",
        "# axis labels\n",
        "pyplot.xlabel('False Positive Rate')\n",
        "pyplot.ylabel('True Positive Rate')\n",
        "# show the legend\n",
        "pyplot.legend()\n",
        "# show the plot\n",
        "pyplot.show()"
      ],
      "execution_count": 130,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "meD6YWfVbj4V",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Mwpw6Rn5ewp7",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "4WSaPUwYexCM",
        "colab_type": "text"
      },
      "source": [
        "# Save and load model"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "FO7o592_e1zf",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "import pickle\n",
        "# save the model to disk\n",
        "filename = '/content/gdrive/My Drive/finalized_model_maliciousDataClassification.sav'\n",
        "pickle.dump(model, open(filename, 'wb'))\n",
        "  \n"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "drATNi8be_x8",
        "colab_type": "code",
        "outputId": "208839ff-c78b-4480-ea9c-ceb8c1597713",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 51
        }
      },
      "source": [
        "# load the model from disk\n",
        "loaded_model = pickle.load(open(filename, 'rb'))\n",
        "result = loaded_model.evaluate(X_test, y_test)\n",
        "print(result)"
      ],
      "execution_count": 132,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "112/112 [==============================] - 1s 10ms/step\n",
            "[0.1423428202590478, 0.9910714285714286]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "xglOWJp3hkyf",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "from matplotlib.colors import ListedColormap\n",
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.preprocessing import StandardScaler\n",
        "from sklearn.neighbors import KNeighborsClassifier\n",
        "from sklearn.svm import SVC\n",
        "from sklearn.gaussian_process import GaussianProcessClassifier\n",
        "from sklearn.gaussian_process.kernels import RBF\n",
        "from sklearn.ensemble import RandomForestClassifier\n",
        "from sklearn.metrics import accuracy_score\n",
        "from sklearn.metrics import plot_confusion_matrix\n",
        "from sklearn.metrics import roc_curve\n",
        "from sklearn.metrics import roc_auc_score"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "UeyLB4EkhlKM",
        "colab_type": "text"
      },
      "source": [
        "# Experimenting on all Classifiers"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "R-Nro1wXhAX9",
        "colab_type": "text"
      },
      "source": [
        "# KNN CLassifier"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "1C9eL-lZh6Rb",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# Defining our model\n",
        "model = KNeighborsClassifier(5)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "wFveqa94iYb5",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 85
        },
        "outputId": "261ad752-a005-455a-f201-0e4ae80ecf8d"
      },
      "source": [
        "\n",
        "print(\"------------------------\"+\"Classifier Name :\",\"K Nearest Neighbours\")\n",
        "model.fit(X_train, y_train)\n",
        "y_pred = model.predict(X_test)\n",
        "print(\"Accuracy Score:\",accuracy_score(y_test, y_pred))\n"
      ],
      "execution_count": 135,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "------------------------Classifier Name : K Nearest Neighbours\n",
            "Accuracy Score: 0.9910714285714286\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:3: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
            "  This is separate from the ipykernel package so we can avoid doing imports until\n"
          ],
          "name": "stderr"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "rIHGXlwYg_HM",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 692
        },
        "outputId": "b609c5e2-7607-40a8-e1f5-df94e1e16e4b"
      },
      "source": [
        "\n",
        "# Plot non-normalized confusion matrix\n",
        "figure = plt.figure(figsize=(27, 9))\n",
        "np.set_printoptions(precision=2)\n",
        "\n",
        "titles_options = [(\"Confusion matrix, without normalization\", None),\n",
        "                  (\"Normalized confusion matrix\", 'true')]\n",
        "for title, normalize in titles_options:\n",
        "    disp = plot_confusion_matrix(model, X, y,\n",
        "                                 display_labels=['Malicious','Not Malicious'],\n",
        "                                 cmap=plt.cm.Blues,\n",
        "                                 normalize=normalize)\n",
        "    disp.ax_.set_title(title)\n",
        "\n",
        "    print(title)\n",
        "    print(disp.confusion_matrix)\n",
        "\n",
        "plt.show()\n"
      ],
      "execution_count": 136,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Confusion matrix, without normalization\n",
            "[[300   1]\n",
            " [  0  72]]\n",
            "Normalized confusion matrix\n",
            "[[1. 0.]\n",
            " [0. 1.]]\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1944x648 with 0 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\nRK5CYII=\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAXIAAAEWCAYAAAB7QRxFAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjEsIGh0\ndHA6Ly9tYXRwbG90bGliLm9yZy+j8jraAAAgAElEQVR4nO3debxd873/8df7nCAhEkNIVRIxX5Ia\nIiiK1HQNralqqNK0ehVX9eo114+YWjXcKtJqDBcxRKghJReteZaJkJQ2IjJQEiKmIMPn98f6nmRn\nO2fvfZJzzt7r5P30WA9rre93fdd37X3y2d/9Xev73YoIzMwsv+qqXQEzM1s2DuRmZjnnQG5mlnMO\n5GZmOedAbmaWcw7kZmY550BuVSHpcUk/TetHSnq4hcvvLSkkdWjJcsucU5L+V9JsSS8uQzk7S3q9\nJetWLZJ6SfpEUn2169KeOZC3U5KmSHpP0ioF+34q6fEqVqtREXFrROxV7Xq0gG8BewI9ImK7pS0k\nIp6KiE1brlqtI/2N7VEqT0RMjYjOEbGgreq1PHIgb9/qgV8sayGppem/lfLWA6ZExKfVrkgtaMtv\nQ8s7/+Ns3y4FTpG0WmOJknaUNErSnPT/HQvSHpd0kaRngM+ADVJXxQmS/inpY0kXSNpQ0rOSPpI0\nXNKK6fjVJd0vaWbqarhfUo8m6jFQ0tNp/bT0VbxhmSfpxpTWVdL1kt6RNEPShQ1f2SXVS7pM0ixJ\nk4H9Sr0wknpKujvV731JV6f9dZLOlvRW+kZzs6SuKa2hu+ZHkqamc/0qpR0DXAfskOp9XuF1FZw3\nJG2U1veVNDG9ljMknZL2D5A0veCYzdL78aGkCZL2L0i7UdJgSQ+kcl6QtGET19xQ/x9Lmpbel+Mk\nbStpfCr/6oL8G0p6NL0+syTd2vC3JGko0Av4S7re0wrKP0bSVODRgn0dJK0habqk76YyOkuaJOno\nUu+VVSAivLTDBZgC7AHcDVyY9v0UeDytrwHMBo4COgBHpO01U/rjwFSgT0pfAQjgPqBL2v8F8Aiw\nAdAVmAj8KB2/JvA9YGVgVeBO4N6C+j0O/DStDwSebuQaegJvA/uk7XuAPwGrAGsDLwI/S2nHAa+l\nY9YAHkv17dBIufXAy8DvUlkdgW+ltJ8Ak9I1dU6v39CU1juVeS3QCdgyvQabNXYdjV1XOn6jtP4O\n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\nN3bKxhIAAAAASUVORK5CYII=\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "LspS0zWKiPPy",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 298
        },
        "outputId": "352d544d-c81e-43ce-ddb1-829eefc4f447"
      },
      "source": [
        "print(\"--------------------------------------------------- ROC Curve: \" + \"K Nearest Neighbours\")\n",
        "auc = roc_auc_score(y_test, y_pred)\n",
        "print('AUC:' + str(auc))\n",
        "fpr, tpr, thresholds = roc_curve(y_test, y_pred)\n",
        "plt.plot([0, 1], [0, 1], linestyle='--')\n",
        "plt.plot(fpr, tpr, marker='.')\n",
        "plt.show()"
      ],
      "execution_count": 137,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "--------------------------------------------------- ROC Curve: K Nearest Neighbours\n",
            "AUC:0.9943820224719101\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "uwsh11Ykhsza",
        "colab_type": "text"
      },
      "source": [
        "# Linear SVM Classifier"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "Kapv-A7ei4u0",
        "colab": {}
      },
      "source": [
        "# Defining our model\n",
        "model = SVC(kernel=\"linear\", C=0.025)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "outputId": "af6db7bf-3d4c-47b3-b310-dc0fa1f87256",
        "id": "B27PPBUOi4u7",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 85
        }
      },
      "source": [
        "\n",
        "print(\"------------------------\"+\"Classifier Name :\",\"Linear SVM Classifier\")\n",
        "model.fit(X_train, y_train)\n",
        "y_pred = model.predict(X_test)\n",
        "print(\"Accuracy Score:\",accuracy_score(y_test, y_pred))\n"
      ],
      "execution_count": 139,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "------------------------Classifier Name : Linear SVM Classifier\n",
            "Accuracy Score: 0.8839285714285714\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.6/dist-packages/sklearn/utils/validation.py:760: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
            "  y = column_or_1d(y, warn=True)\n"
          ],
          "name": "stderr"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "outputId": "4b156e15-2b3f-4c27-f458-ad53b8f35c95",
        "id": "lDk7Pq01i4u_",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 692
        }
      },
      "source": [
        "\n",
        "# Plot non-normalized confusion matrix\n",
        "figure = plt.figure(figsize=(27, 9))\n",
        "np.set_printoptions(precision=2)\n",
        "\n",
        "titles_options = [(\"Confusion matrix, without normalization\", None),\n",
        "                  (\"Normalized confusion matrix\", 'true')]\n",
        "for title, normalize in titles_options:\n",
        "    disp = plot_confusion_matrix(model, X, y,\n",
        "                                 display_labels=['Malicious','Not Malicious'],\n",
        "                                 cmap=plt.cm.Blues,\n",
        "                                 normalize=normalize)\n",
        "    disp.ax_.set_title(title)\n",
        "\n",
        "    print(title)\n",
        "    print(disp.confusion_matrix)\n",
        "\n",
        "plt.show()\n"
      ],
      "execution_count": 140,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Confusion matrix, without normalization\n",
            "[[301   0]\n",
            " [ 31  41]]\n",
            "Normalized confusion matrix\n",
            "[[1.   0.  ]\n",
            " [0.43 0.57]]\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1944x648 with 0 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\ngg==\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "outputId": "31badfc8-75db-4b3d-d73d-1688767b770f",
        "id": "eSDJGACli4vC",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 298
        }
      },
      "source": [
        "print(\"--------------------------------------------------- ROC Curve: \" + \"Linear SVM Classifier\")\n",
        "auc = roc_auc_score(y_test, y_pred)\n",
        "print('AUC:' + str(auc))\n",
        "fpr, tpr, thresholds = roc_curve(y_test, y_pred)\n",
        "plt.plot([0, 1], [0, 1], linestyle='--')\n",
        "plt.plot(fpr, tpr, marker='.')\n",
        "plt.show()"
      ],
      "execution_count": 141,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "--------------------------------------------------- ROC Curve: Linear SVM Classifier\n",
            "AUC:0.717391304347826\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "XSXfsJNWhNpH",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "yZ0_VX0HjI9F",
        "colab_type": "text"
      },
      "source": [
        "# RBF SVM"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "H9NTYR_OjMnG",
        "colab": {}
      },
      "source": [
        "# Defining our model\n",
        "model =  SVC(gamma=2, C=1)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "outputId": "9a75222c-d64b-4f3d-b723-83d821452aef",
        "id": "G1y3b3gdjMnM",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 85
        }
      },
      "source": [
        "\n",
        "print(\"------------------------\"+\"Classifier Name :\",\"RBF SVM\")\n",
        "model.fit(X_train, y_train)\n",
        "y_pred = model.predict(X_test)\n",
        "print(\"Accuracy Score:\",accuracy_score(y_test, y_pred))\n"
      ],
      "execution_count": 143,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "------------------------Classifier Name : RBF SVM\n",
            "Accuracy Score: 0.9821428571428571\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.6/dist-packages/sklearn/utils/validation.py:760: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
            "  y = column_or_1d(y, warn=True)\n"
          ],
          "name": "stderr"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "outputId": "0f4cc5ab-6e8e-4153-afc8-1cdbe2b63356",
        "id": "VRtbjy6GjMnO",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 692
        }
      },
      "source": [
        "\n",
        "# Plot non-normalized confusion matrix\n",
        "figure = plt.figure(figsize=(27, 9))\n",
        "np.set_printoptions(precision=2)\n",
        "\n",
        "titles_options = [(\"Confusion matrix, without normalization\", None),\n",
        "                  (\"Normalized confusion matrix\", 'true')]\n",
        "for title, normalize in titles_options:\n",
        "    disp = plot_confusion_matrix(model, X, y,\n",
        "                                 display_labels=['Malicious','Not Malicious'],\n",
        "                                 cmap=plt.cm.Blues,\n",
        "                                 normalize=normalize)\n",
        "    disp.ax_.set_title(title)\n",
        "\n",
        "    print(title)\n",
        "    print(disp.confusion_matrix)\n",
        "\n",
        "plt.show()\n"
      ],
      "execution_count": 144,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Confusion matrix, without normalization\n",
            "[[300   1]\n",
            " [  1  71]]\n",
            "Normalized confusion matrix\n",
            "[[1.   0.  ]\n",
            " [0.01 0.99]]\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1944x648 with 0 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "outputId": "68190d31-afd4-4d1e-87ff-ac3b1d9402c3",
        "id": "vLE5qfYVjMnR",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 298
        }
      },
      "source": [
        "print(\"--------------------------------------------------- ROC Curve: \" + \"RBF SVM\")\n",
        "auc = roc_auc_score(y_test, y_pred)\n",
        "print('AUC:' + str(auc))\n",
        "fpr, tpr, thresholds = roc_curve(y_test, y_pred)\n",
        "plt.plot([0, 1], [0, 1], linestyle='--')\n",
        "plt.plot(fpr, tpr, marker='.')\n",
        "plt.show()"
      ],
      "execution_count": 145,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "--------------------------------------------------- ROC Curve: RBF SVM\n",
            "AUC:0.9726428920371275\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\nA/9A5ypnMSJ2AAAAAElFTkSuQmCC\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "ACxEXwsjjMnU",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "g2JZBgRPjmf4",
        "colab_type": "text"
      },
      "source": [
        "# Gaussian Process CLassifier"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "bmYbp_UGjrQp",
        "colab": {}
      },
      "source": [
        "# Defining our model\n",
        "model =  GaussianProcessClassifier(1.0 * RBF(1.0))"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "outputId": "6fb65b0f-12dc-4016-8bd5-e4da0583c5bf",
        "id": "RbmBjSuPjrQx",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 85
        }
      },
      "source": [
        "\n",
        "print(\"------------------------\"+\"Classifier Name :\",\"Gaussian Process Classifier\")\n",
        "model.fit(X_train, y_train)\n",
        "y_pred = model.predict(X_test)\n",
        "print(\"Accuracy Score:\",accuracy_score(y_test, y_pred))\n"
      ],
      "execution_count": 147,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "------------------------Classifier Name : Gaussian Process Classifier\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.6/dist-packages/sklearn/utils/validation.py:760: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
            "  y = column_or_1d(y, warn=True)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Accuracy Score: 0.9821428571428571\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "outputId": "5472c9fe-075f-4247-da2f-e84c7075c0d9",
        "id": "5chMcCsljrQ3",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 692
        }
      },
      "source": [
        "\n",
        "# Plot non-normalized confusion matrix\n",
        "figure = plt.figure(figsize=(27, 9))\n",
        "np.set_printoptions(precision=2)\n",
        "\n",
        "titles_options = [(\"Confusion matrix, without normalization\", None),\n",
        "                  (\"Normalized confusion matrix\", 'true')]\n",
        "for title, normalize in titles_options:\n",
        "    disp = plot_confusion_matrix(model, X, y,\n",
        "                                 display_labels=['Malicious','Not Malicious'],\n",
        "                                 cmap=plt.cm.Blues,\n",
        "                                 normalize=normalize)\n",
        "    disp.ax_.set_title(title)\n",
        "\n",
        "    print(title)\n",
        "    print(disp.confusion_matrix)\n",
        "\n",
        "plt.show()\n"
      ],
      "execution_count": 148,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Confusion matrix, without normalization\n",
            "[[300   1]\n",
            " [  1  71]]\n",
            "Normalized confusion matrix\n",
            "[[1.   0.  ]\n",
            " [0.01 0.99]]\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1944x648 with 0 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "outputId": "f2508d5e-2736-4ee6-b817-285b0611bc68",
        "id": "u49LPVLVjrQ9",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 298
        }
      },
      "source": [
        "print(\"--------------------------------------------------- ROC Curve: \" + \"Gaussian Process Classifier\")\n",
        "auc = roc_auc_score(y_test, y_pred)\n",
        "print('AUC:' + str(auc))\n",
        "fpr, tpr, thresholds = roc_curve(y_test, y_pred)\n",
        "plt.plot([0, 1], [0, 1], linestyle='--')\n",
        "plt.plot(fpr, tpr, marker='.')\n",
        "plt.show()"
      ],
      "execution_count": 149,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "--------------------------------------------------- ROC Curve: Gaussian Process Classifier\n",
            "AUC:0.9726428920371275\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\nA/9A5ypnMSJ2AAAAAElFTkSuQmCC\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "B4HmTRk0j0_N",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "qNzHiiOSj2sB",
        "colab_type": "text"
      },
      "source": [
        "# Random Forest Classifier"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "jM9UaD8skEli",
        "colab": {}
      },
      "source": [
        "# Defining our model\n",
        "model =  RandomForestClassifier(max_depth=5, n_estimators=10, max_features=1)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "outputId": "5c7ad93b-bd5e-4ab1-a3d9-0058f3b56b5c",
        "id": "LkwoXKcTkElm",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 85
        }
      },
      "source": [
        "\n",
        "print(\"------------------------\"+\"Classifier Name :\",\"Random Forest Classifier\")\n",
        "model.fit(X_train, y_train)\n",
        "y_pred = model.predict(X_test)\n",
        "print(\"Accuracy Score:\",accuracy_score(y_test, y_pred))\n"
      ],
      "execution_count": 151,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "------------------------Classifier Name : Random Forest Classifier\n",
            "Accuracy Score: 0.9910714285714286\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:3: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().\n",
            "  This is separate from the ipykernel package so we can avoid doing imports until\n"
          ],
          "name": "stderr"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "outputId": "4e770a31-a305-4de6-f830-111a8166e731",
        "id": "sb-3eCqMkElo",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 692
        }
      },
      "source": [
        "\n",
        "# Plot non-normalized confusion matrix\n",
        "figure = plt.figure(figsize=(27, 9))\n",
        "np.set_printoptions(precision=2)\n",
        "\n",
        "titles_options = [(\"Confusion matrix, without normalization\", None),\n",
        "                  (\"Normalized confusion matrix\", 'true')]\n",
        "for title, normalize in titles_options:\n",
        "    disp = plot_confusion_matrix(model, X, y,\n",
        "                                 display_labels=['Malicious','Not Malicious'],\n",
        "                                 cmap=plt.cm.Blues,\n",
        "                                 normalize=normalize)\n",
        "    disp.ax_.set_title(title)\n",
        "\n",
        "    print(title)\n",
        "    print(disp.confusion_matrix)\n",
        "\n",
        "plt.show()\n"
      ],
      "execution_count": 152,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Confusion matrix, without normalization\n",
            "[[300   1]\n",
            " [  0  72]]\n",
            "Normalized confusion matrix\n",
            "[[1. 0.]\n",
            " [0. 1.]]\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1944x648 with 0 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAXUAAAEWCAYAAACZnQc8AAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjEsIGh0\ndHA6Ly9tYXRwbG90bGliLm9yZy+j8jraAAAgAElEQVR4nO3de7xc0/3/8df7nEQSRIJEBNG4BBV1\nq7q1NKUU7bfU17W+bl+tKnrRUtr6tUH1q0qpUv2mX9q4X0oqRd3vd0lIIgRBXEJIUuIWNPH5/bHW\nJJNxzsycZE7OzOT9zGMe2XvtvddeczmfWbP22mspIjAzs+bQ0tUFMDOz2nFQNzNrIg7qZmZNxEHd\nzKyJOKibmTURB3UzsybioN5AJPWS9A9JsyVdvRj5HCDpllqWratI2k7S0/VyPkmDJYWkbkuqTI2g\n9HWR9E9JB3fCeSZJGlbrfBuJ3E+99iR9E/gRsAHwDvA4cGpE3LeY+R4IfA/YNiLmLnZB65ykAIZE\nxJSuLkt7JE0FvhURt+X1wcALQPdav0eS/gq8EhEn1jLfJaEzXpdGfj06k2vqNSbpR8DZwK+BAcCa\nwB+B3WuQ/aeAZ5aGgF4N14Y7j1/bBhYRftToAfQB3gX2LrNPD1LQfzU/zgZ65G3DgFeAHwNvAK8B\nh+ZtJwEfAf/O5zgMGA5cUpT3YCCAbnn9EOB50q+FF4ADitLvKzpuW+BRYHb+f9uibXcBpwD353xu\nAfq189wK5f9JUfn3AHYDngH+BfysaP8tgQeBt/K+5wLL5G335OfyXn6++xblfzwwHbi4kJaPWSef\nY/O8vhowAxhWxXs3EvhxXl49n/uoknxbSs53MfAxMCeX8SdF78HBwEvATODnVb7/C70vOS2AdYHD\n83v/UT7XP9p5HgEcATybX9fzWPCLvAU4EXgxvz8XAX1KPjuH5XLfk8tzP3BWzuv5/Fk5BHg553Fw\n0bm/CjwGvJ23Dy/z2byL9AsHYHx+ToVHFN4z4Or8Xs/OZRqa09t8PYCpwJcX52+t0R9dXoBmegC7\nAHMLH9x29jkZeAhYBegPPACckrcNy8efDHQnBcP3gRXz9uEsHMRL1+f/4QDL5T+u9fO2gUV/EIeQ\ngwewEvAmcGA+bv+8vnLefhfwHLAe0Cuvn9bOcyuU/xe5/N8mBdXLgN7AUFIAXCvv/1lg63zewcBT\nwA+L8gtg3Tby/03+g+1FUZDN+3wbeBJYFrgZOKPK9+6/iwLDN/NzvrJo23VFZSg+31RyECl5D/6c\ny7cJ8CHw6Sre//nvS1uvAfBX4FcVnkcA1wN9Sb8SZwC7FD2PKcDawPLAtcDFJeW+iPTZ6ZXLMxc4\nFGgFfkUK+Ofl139n0hf98kWvzWdIXx4bA68De5R+Nos+V99qo/yHA5OBFYrK3JsFAfrxon0/8Xqw\ncFBf5L+1Rn50eQGa6QEcAEyvsM9zwG5F618BpublYaSg161o+xvA1nl5OB0L6m8B/wn0KinDISwI\n6gcCj5RsfxA4JC/fBZxYtO1I4KZ2nluh/K15vXcuz1ZF+4wt/KG3cfwPgVFF620F9Y+AniVpr5Tk\nMxqYCEwg18yqeO/WIX2ZtQB/Ar7Dghr5SOBHbZ2P9oP6GkVpjwD7VfH+z39f2noNqD6of6Fo/Srg\nhLx8O3Bk0bb1SbXdwpdqAGuXfE6eLVr/TN5nQFHaLGDTdspyNnBW6Wez6HP1rZL9v0D6vK/XTn59\ncx6FXxefeD1YOKgv8t9aIz/cpl5bs4B+FdojVyP9/C14MafNzyMWbjN/n1Sr6pCIeI/UZHEE8Jqk\nGyRtUEV5CmVavWh9egfKMysi5uXlOfn/14u2zykcL2k9SddLmi7pbdJ1iH5l8gaYEREfVNjnz8BG\nwB8i4sMK+wIQEc+Rmno2BbYj1XZflbQ+8EXg7mryKdLea1bp/a+Fjpy7G+naT8HLJXmVvndERHvv\n51aS7pQ0Q9Js0mev0vtJPnYQ6Qvo4Ih4Jqe1SjpN0nP58zE1715Vniyhv7V646BeWw+SfmrvUWaf\nV0kXPAvWzGmL4j1SM0PBqsUbI+LmiNiJ1PQymRTsKpWnUKZpi1imjjifVK4hEbEC8DNAFY6Jchsl\nLU+qIV4ADJe0UgfKczewF6ldf1pePxhYkdSDqcPlaUO593+h91PSQu/nIpyrmnPPZeHAvTjnuIz0\nK2lQRPQh/eKp9H4iqRfwd+DsiPhn0aZvkjoYfJl0vWpw4ZAqy1rLv7WG4aBeQxExm9SefJ6kPSQt\nK6m7pF0lnZ53uxw4UVJ/Sf3y/pcs4ikfB7aXtKakPsBPCxskDZC0u6TlSF8075Iu6pW6EVhP0jcl\ndZO0L7Ahqaba2XqT2v3fzb8ivluy/XVS+29H/B4YExHfAm4gBRYAJA2XdFeZY+8GjiZdkIPURHA0\nqUlkXjvHdLSM5d7/8cBQSZtK6klqXlucc7V17mMkrZW//H5Num5Qq95UvYF/RcQHkrYkBeVqXAhM\njojTS9J7kz67s0hfdr8u2V7p9ajl31rDcFCvsYg4k9RH/UTSRaqXSYHh73mXXwFjSO29E4FxOW1R\nznUrcGXOaywLB+KWXI5XST03vsgngyYRMQv4GqkXwCxSD46vRcTMRSlTBx1L+sN/h/Qr4sqS7cOB\nkZLekrRPpcwk7U66WF14nj8CNpd0QF4fROrN0Z67SYGkENTvIwWTe9o9Av6HFDjeknRspTJS5v3P\nzQ4nA7eReq+U3tdwAbBhPtff6bgLST127iH1hvqAdN9DrRwJnCzpHVIAvarK4/YDviHp3aLHdqSL\nti+SfjU+SbroWazS61Gzv7VG4puPbKkh6XFgx/xFZtaUHNTNzJqIm1/MzJYQST0lPSJpfB6n5qSc\nvpakhyVNkXSlpGVyeo+8PiVvH1zpHA7qZmZLzofADhGxCan77C6StibdUHdWRKxLul/isLz/YcCb\nOf2svF9ZDupmZktIJO/m1e75EcAOwN9y+kgWdIvePa+Tt+8oqWw3UQ/a04XUrVdomd5dXQzrgM0+\nvWZXF8E6aNy4sTMjov+iHt+6wqci5s6pvCMQc2ZMIvUqKhgRESOK95HUSuqtti5pyIXngLeKupa+\nwoKb/1Yn3xAWEXPzTV0rk8YUapODehfSMr3psX7FnnpWR+5/+NyuLoJ1UK/uKr1jukNi7pyq/04/\nePy8DyJii7L5pXseNpXUFxhFGqK7Ztz8YmZWlkAt1T06ICLeAu4EtgH6Fg0vsgYL7uieRrq/ojAc\nch/S/STtclA3MytHQEtrdY9KWaW7W/vm5V7ATqTRSe8kDVEBaWiK6/Ly6LxO3n5HVOiH7uYXM7NK\nyl+b7IiBpLukW0mV6qsi4npJTwJXSPoVaUz6C/L+FwAXS5pCujN8v0oncFA3MytLHW5aaU9ETAA2\nayP9edKkMaXpHwB7d+QcDupmZpXUrqbe6RzUzczKETWrqS8JDupmZmXJNXUzs6ZSRc+WeuGgbmZW\nVu0ulC4JDupmZuUIN7+YmTUV19TNzJqFm1/MzJqHgFZfKDUzax5uUzczaxZufjEzay6uqZuZNRHX\n1M3MmoQ8TICZWXPxMAFmZs3CF0rNzJqLm1/MzJqEx1M3M2smbn4xM2suvlBqZtZE3KZuZtYk5OYX\nM7Pm4pq6mVnzkIO6mVlzSLPZOaibmTUHCbU4qJuZNY1Gqqk3ziVdM7MuIqmqRxX5DJJ0p6QnJU2S\n9IOcPlzSNEmP58duRcf8VNIUSU9L+kqlc7imbmZWQQ1r6nOBH0fEOEm9gbGSbs3bzoqIM0rOuyGw\nHzAUWA24TdJ6ETGvvRO4pm5mVo468KggIl6LiHF5+R3gKWD1MofsDlwRER9GxAvAFGDLcudwUDcz\nK0NU1/TS0dq8pMHAZsDDOeloSRMkXShpxZy2OvBy0WGvUP5LwEHdzKySlpaWqh5AP0ljih6Ht5Wf\npOWBa4AfRsTbwPnAOsCmwGvAmYtaVrepm5lV0IFa+MyI2KJCXt1JAf3SiLgWICJeL9r+Z+D6vDoN\nGFR0+Bo5rV2uqZuZlVPDNnWlb4cLgKci4ndF6QOLdvsG8EReHg3sJ6mHpLWAIcAj5c7hmrqZWQU1\n7P3yeeBAYKKkx3Paz4D9JW0KBDAV+A5AREySdBXwJKnnzFHler6Ag7qZWVmFC6W1EBH30Xad/sYy\nx5wKnFrtORzUzcwq8DABZmbNQo01TICDuplZBQ7qZmZNxEHdzKxJ1PJC6ZLgoG5mVknjxHQHdTOz\nskRhCICG4KBuZlaBm1/MzJpJ48R0B3VrW49lunHDiB/So3s3Wru1Mvr2xzhtRLs3vVXlmEN25r++\nvg3zPv6YE874G3c89BSrD+jL+cMPov9KvQlg5Kj7+d8r7qrJc7DKjj75Em6+7wn6rdibB6/8eVcX\np241Uk29cRqKAEkh6ZKi9W6SZki6vsJxwwr7SPq6pBMq7P9AbUrcuD78aC67f/cctjvgNLb/5v+w\n4zYbssVGg6s6dvx1J30ibf21VmXPnTZnm31PZa/v/5Ezjt+HlhYxd+7HnHj2tWyz76nsfOgZfGuv\n7Vl/rVVr/GysPft/bWv+ds5RXV2MulbtWOr1Evgbrab+HrCRpF4RMQfYiQrDUJaKiNGkkc/K7bPt\nohexebw35yMAundrpXu3ViKCTTYYxKnH7MlyvXow6633OOqki3l91tsV89rtixtz7a3j+Ojfc3np\n1Vk8//JMPjt0MI9OfGH+8e++/yHPTJ3OwP59efqF6Z363Cz5/Obr8tKrs7q6GHWvXgJ2NRqqpp7d\nCHw1L+8PXF7YIGlLSQ9KekzSA5LWLz1Y0iGSzs3LAySNkjQ+P7bN6e/m/yXpt5KekDRR0r45fX7N\nP6+fK+mQvHxanlR2gqQzSs/fSFpaxD2XnsAzt5zGXQ9PZvzklzn9uL05+PgL+NJBp3PpPx7kxCP/\no6q8Bvbvw7TX35y//uobbzKwf5+F9hk0cCU2Xn8Nxk6aWsunYbbY1KKqHvWg0WrqAFcAv8hBdWPg\nQmC7vG0ysF1EzJX0ZeDXwH+Wyesc4O6I+IakVmD5ku17kmYi2QToBzwq6Z72MpO0Mmks5A0iIiT1\nbWOfw4E0G0r30tPVl48/DrY/4DRWWL4Xl/z22wwZPIAN1h7IqPOOBqC1pYXpM2cD8ONDv8LuX94M\ngFX79+GeS1ML18Pjn+e406+qeK7lei3DRb/5Fj/93TW8894HnfSMzBZNI9XUGy6oR8SEPLff/nxy\nuMo+wEhJQ0jjEnevkN0OwEE533nA7JLtXwAuz9tel3Q38DmgvfaG2cAHwAX5S+cTbf0RMQIYAdCy\n7CpRoXx14e1353Dv2Gf46rBNmPz8dL5y2Cdn2jrzLzdz5l9uBlKb+vYHnLbQ9tdmzGb1ASvOX19t\nlRV5bUZ6ubu1tjDyN9/m6pvGcP2d4zvxmZgtggYb0KsRm18gtYmfQVHTS3YKcGdEbAT8B9Czk84/\nl4Vfu54AETGXNNP334CvATd10vk73cp9l2eF5XsB0LNHd7605QZMenYa/VZcns99Zi0gBeMN1q7u\nouY/75nAnjttzjLdu7Hmaiuzzpr95zez/OH/HcAzU6fzx8vu6JTnYrY4BEjVPepBw9XUswuBtyJi\noqRhRel9WHDh9JAq8rkd+C5wdqH5JSKKa+v3At+RNBJYCdgeOI70C2BDST2AXsCOwH15MtllI+JG\nSfcDzy/qE+xqq/ZbgT8OP5DWlhZaWsSo28bxz3sm8vL0f/GbH+/NCsv3pLVbK3+6/E4mP1/5oubk\n56fz99se46Grfs7ceR9z3OlX8fHHwdabrM1+X92KSc9Om99kc8p5o7n1gSc7+ykacNjP/8L9Y59l\n1lvvMvSrJ3LC4btx4O7uJ7Cw+unZUg1FNEQLAJAuYEbE8iVpw4BjI+JrkrYBRpJ6ydwA/FdEDC7Z\n5xBgi4g4WtIAUlPI2sA84LsR8WDhPHk+wdOBXUnNOb+KiCvzeU8ntZ+/ALxL+vVwM3AdqeYu4IyI\nGNne82lZdpXosf4+NXltbMl489Fzu7oI1kG9umtspcmgy+m56nrxqYP/UNW+z5y+y2KdqxYaKqg3\nGwf1xuOg3ngWO6gPXC8GVxnUn/5N1wf1Rm1+MTNbIkTq3tsoHNTNzCpooCZ1B3Uzs0oa6UKpg7qZ\nWTl11F2xGg7qZmZlCHmSDDOzZuKauplZE3GbuplZs3CbuplZ80hjvzROVG+c1n8zsy5SqwG9JA2S\ndGeec2GSpB/k9JUk3Srp2fz/ijldks6RNCXP0bB5pXM4qJuZVdDSoqoeVZgL/DgiNgS2Bo6StCFw\nAnB7RAwhDTRYmHJzV2BIfhwOnF+xrB1/emZmSxFVP09pJRHxWkSMy8vvAE8BqwO7kwYjJP+/R17e\nHbgokoeAvpIGljuH29TNzMoojKdepX6SxhStj8gT43wy3zTZz2bAw8CAiHgtb5oODMjLqwMvFx32\nSk57jXY4qJuZldWh8dRnVjNKY5574RrghxHxdnH+eSrMRR4+180vZmYV1HLmI0ndSQH90oi4Nie/\nXmhWyf+/kdOnAYOKDl+DBRMBtclB3cysHNXuQmmeeOcC4KmI+F3RptHAwXn5YNJkO4X0g3IvmK2B\n2UXNNG1y84uZWRk17qf+eeBAYKKkx3Paz4DTgKskHQa8CBRmz7kR2A2YArwPHFrpBA7qZmYV1Cqo\nR8R9pO+JtuzYxv4BHNWRcziom5lV0EA3lDqom5lV0kjDBDiom5mV4wG9zMyaR5oko3GiuoO6mVkF\nLQ1UVXdQNzOroIFiuoO6mVk5ki+Umpk1lQZqUm8/qEv6A9DuoDIR8f1OKZGZWZ1plgulY8psMzNb\nKojUA6ZRtBvUI2Jk8bqkZSPi/c4vkplZfWmginrlURolbSPpSWByXt9E0h87vWRmZvWgylmP6uVi\najVD754NfAWYBRAR44HtO7NQZmb1pJbjqXe2qnq/RMTLJd9C8zqnOGZm9UU0381HL0vaFog8Y8cP\nSJOlmpktFRqp90s1zS9HkMbzXR14FdiUDo7va2bWqKpteqmXynzFmnpEzAQOWAJlMTOrS43U/FJN\n75e1Jf1D0gxJb0i6TtLaS6JwZmb1QFU+6kE1zS+XAVcBA4HVgKuByzuzUGZm9aTZujQuGxEXR8Tc\n/LgE6NnZBTMzqwep90t1j3pQbuyXlfLiPyWdAFxBGgtmX9IM12ZmzU/NM0nGWFIQLzyb7xRtC+Cn\nnVUoM7N6Ui9NK9UoN/bLWkuyIGZm9ajQ/NIoqrqjVNJGwIYUtaVHxEWdVSgzs3rSFDX1Akm/BIaR\ngvqNwK7AfYCDupktFRonpFfX+2UvYEdgekQcCmwC9OnUUpmZ1QkJWltU1aMeVNP8MiciPpY0V9IK\nwBvAoE4ul5lZ3Wik5pdqaupjJPUF/kzqETMOeLBTS2VmVkdqNfaLpAvznflPFKUNlzRN0uP5sVvR\ntp9KmiLpaUlfqaas1Yz9cmRe/JOkm4AVImJCNZmbmTU6oVqO/fJX4Fw+eU3yrIg4Y6HzShsC+wFD\nSXfz3yZpvYgoO/R5uZuPNi+3LSLGlS+7mVkTqOEIjBFxj6TBVe6+O3BFRHwIvCBpCrAlFVpKytXU\nzyxXNmCHKgtm7djs02ty/8PndnUxrAPGv/hWVxfBukAH2tT7SRpTtD4iIkZUcdzRkg4CxgA/jog3\nScOdP1S0zys5raxyNx99qYqCmJk1NQGt1Qf1mRGxRQdPcT5wCqmyfAqpQv3fHcxjvqpuPjIzW5p1\nZm/FiHi9sCzpz8D1eXUaC/c0XCOnlVVN7xczs6VaZ47SKGlg0eo3gELPmNHAfpJ6SFoLGAI8Uik/\n19TNzMpI3RVrU1WXdDnpDv1+kl4BfgkMk7QpqfllKnnwxIiYJOkq4ElgLnBUpZ4vUN0wASJNZ7d2\nRJwsaU1g1Yio+I1hZtYMatX8EhH7t5F8QZn9TwVO7cg5qml++SOwDVAozDvAeR05iZlZI2uqiaeB\nrSJic0mPAUTEm5KW6eRymZnVBQHd6iViV6GaoP5vSa2k9h4k9Qc+7tRSmZnVkQaK6VUF9XOAUcAq\nkk4ljdp4YqeWysysTkg1HSag01Uz9sulksaSht8VsEdEPNXpJTMzqxMNFNOr6v2yJvA+8I/itIh4\nqTMLZmZWL+pkqPSqVNP8cgMLJqDuCawFPE0aOczMrKkJ6mYCjGpU0/zymeL1PHrjke3sbmbWXBbj\nbtGu0OE7SiNinKStOqMwZmb1SA00S2k1beo/KlptATYHXu20EpmZ1RHRfDX13kXLc0lt7Nd0TnHM\nzOpP0wT1fNNR74g4dgmVx8ys7jTSxNPlprPrFhFzJX1+SRbIzKyeSNDaQIOUl6upP0JqP39c0mjg\nauC9wsaIuLaTy2ZmVhea6o5SUt/0WaQ5SQv91QNwUDezptdMF0pXyT1fnmBBMC+ITi2VmVkdaaCK\netmg3gosD2120HRQN7OlhGhpkn7qr0XEyUusJGZmdUg0T029gZ6GmVknEXRroEb1ckF9xyVWCjOz\nOtU0NfWI+NeSLIiZWb1qti6NZmZLtQaK6Q7qZmbliDSSYaNwUDczK0dufjEzaxrpjlIHdTOzptE4\nId1B3cysogaqqDdU+7+ZWRcQUnWPijlJF0p6Q9ITRWkrSbpV0rP5/xVzuiSdI2mKpAl5fuiKHNTN\nzMoo9H6p5lGFvwK7lKSdANweEUOA2/M6wK7AkPw4HDi/mhM4qJuZVdAiVfWoJCLuAUpv7NwdGJmX\nRwJ7FKVfFMlDQF9JAyudw23qZmblqEPT2fWTNKZofUREjKhwzICIeC0vTwcG5OXVgZeL9nslp71G\nGQ7qZmZldPDmo5kRscWinisiQtJiDW3u5hczswpqdaG0Ha8XmlXy/2/k9GnAoKL91shpZTmom5lV\noCofi2g0cHBePhi4rij9oNwLZmtgdlEzTbvc/GJmVoaA1hp1VJd0OTCM1Pb+CvBL4DTgKkmHAS8C\n++TdbwR2A6YA7wOHVnMOB3UzswpqdfNRROzfzqZPzF8REQEc1dFzOKibmZUl1EADBTiom5lV0EjD\nBDiom5mVkbo0Nk5Ud1A3MytHrqmbmTUVj6duZtYk0iQZXV2K6jmom5lV4N4vZmZNpIFaXxzUrbZu\ne+BJfnrm35j38cccuPu2HHPIzl1dJCvx0rQZnHTWlfPXX3v9TQ7dd0dm/uttHhgzme7dWllt1ZU4\n/qg96b1cry4saf1opJp6p439IikknVm0fqyk4RWO2UPShu1sG57zXLco7Yc5reyoaJLuKuwj6UZJ\nfcvse4Skg8rlZ22bN+9jjjv9Kq7+/ZE8dNWJXHPLWCY/X3GoClvC1ly9PxeccTQXnHE0I35zJD16\ndGe7rT7NFhuvw1/O+h4X/u57DBrYj8uuvaeri1oXCm3q1TzqQWcO6PUhsKekfh04Zg+gzaCeTQT2\nK1rfG5jUkUJFxG4R8VaZ7X+KiIs6kqclYydNZe1B/Ri8Rj+W6d6NPXfanBvvntDVxbIyxk18jtUH\nrMSq/Vfkc5sOoVtrKwAbrjeIGbNmd3Hp6kSVE2TUSw+Zzgzqc4ERwDGlGyQNlnRHnnfvdklrStoW\n+DrwW0mPS1qnjTz/TpoNhLx9NjCzKN/zJY2RNEnSSW0VStLUwheNpINyGcZLujinDZd0bF7eVNJD\neZ9RRXMHFtf8+0mampeHSnokl3+CpCGL9Mo1qNdmzGb1ASvOX19twIq8NsOBoZ7dcf9EdvjCxp9I\nv/GOsWy5+XpdUKL61MmjNNZUZw+9ex5wgKQ+Jel/AEZGxMbApcA5EfEAaajJ4yJi04h4ro383gZe\nlrQRqcZ+Zcn2n+cB6jcGvijpk5/WTNJQ4ERgh4jYBPhBG7tdBByfyzmRNKJaOUcAv4+ITYEtSDOV\nlJ738PzFM2bGzBkVsjPrPP/+91zuHzOZYdtstFD6xdfcRWtrCzttt0kXlay+pOYX19QBiIi3SYHx\n+yWbtgEuy8sXA1/oQLZXkAL6HsCokm37SBoHPAYMpXxTzg7A1RExM5d1oXkD8xdR34i4OyeNBLav\nULYHgZ9JOh74VETMKd0hIkZExBYRsUX/fv0rZNdYBvbvw7TX35y//urrbzKwf+n3udWLhx97lvXW\nGshKfZefn/bPO8fx4NinOfEHey/OpA9NxzX1hZ0NHAYsV6P8rgcOBF7KXxoASFoLOBbYMdesbwB6\n1uicpeay4LWbf46IuIzUhDQHuFHSDp10/rq0+Yaf4rmXZvDitJl89O+5XHvrOHbdvt0fS9bFbr9v\nAjsWNb08/NgzXHHdvfz6+P+iZ49lurBkdaiBonqnB/VcA76KFNgLHmDBBc8DgHvz8jtA7wr5vQ8c\nD5xasmkF4D1gtqQBwK4VinYHsLeklQEkrVRyntnAm5K2y0kHAoVa+1Tgs3l5r8IxktYGno+Ic0iz\nlyxVEa1bt1ZO/8k+/Of3z2OrvX/FHl/ejE+vU3Hyc+sCcz74iLETprDdVkPnp/3+gut5f86H/PiU\nv3DYsedy5v9eVyaHpUsjNb8sqX7qZwJHF61/D/iLpOOAGSyY0eMK4M+Svg/s1U67OhFxRRtp4yU9\nBkwmzcB9f7kCRcQkSacCd0uaR2qyOaRkt4OBP0laFni+qJxnkGYqOZz0i6BgH+BASf8mzQr+63Jl\naEY7f34oO39+aOUdrUv16rkMo//684XSLjv3R11UmvpXH+G6OkqTa1hX+Oxnt4j7Hx7T1cWwDhj/\nYru9Ya1Obb3uimNzB4pF8unPbBYXjb6rqn23XLvvYp2rFnxHqZlZGam5vHHq6g7qZmbleDx1M7Pm\n0kAx3UHdzKw8NVSffQd1M7MKGiimO6ibmZVTR/cVVcVB3cyskgaK6g7qZmYVuEujmVkTcZu6mVmz\nqHE/9Tz/wjvAPGBuRGyRx566EhhMGltqn4h4s708ylkSozSamTU0VfmvA76U540oDClwAnB7RAwB\nbs/ri8RB3cysDJFq6tU8FsPupDkbyP/vsagZOaibmVVQ4+HUA7hF0tg80ivAgIgozNI+HRiwqGV1\nm7qZWSXVR+x+koqHXh0RESNK9vlCREyTtApwq6TJxRsjIiQt8vC5DupmZhV0YAKMmZWG3o2Iafn/\nNySNArYEXpc0MCJekzQQeIszzhsAAAlsSURBVGORy7qoB5qZLS1q1fwiaTlJvQvLwM7AE8Bo0qQ8\n5P8Xedop19TNzCqpXZfGAcCoPEBYN+CyiLhJ0qOk2dQOA14kzaK2SBzUzczKqOUkGRHxPLBJG+mz\ngB1rcQ4HdTOzcjxJhplZc2mgmO6gbmZWnifJMDNrKg0U0x3UzczK8SQZZmbNpoGiuoO6mVkFniTD\nzKyJuE3dzKxZCFoc1M3MmknjRHUHdTOzMgqTZDQKB3UzswoaKKY7qJuZVeKauplZE/EwAWZmTaRx\nQrqDuplZWfLQu2ZmzcV3lJqZNZPGiekO6mZmlTRQTHdQNzMrT7Q0UKO6g7qZWRmNdkdpS1cXwMzM\nasc1dTOzChqppu6gbmZWgbs0mpk1C998ZGbWPBrtQqmDuplZBW5+MTNrIo1UU3eXRjOzClTlo6q8\npF0kPS1piqQTal1WB3Uzs0pqFNUltQLnAbsCGwL7S9qwlkV1UDczK0NAi1TVowpbAlMi4vmI+Ai4\nAti9luV1m3oXGjdu7Mxe3fViV5ejk/QDZnZ1Iaxqzfx+fWpxDh43buzNvbqrX5W795Q0pmh9RESM\nKFpfHXi5aP0VYKvFKV8pB/UuFBH9u7oMnUXSmIjYoqvLYdXx+9W+iNilq8vQEW5+MTNbcqYBg4rW\n18hpNeOgbma25DwKDJG0lqRlgP2A0bU8gZtfrLOMqLyL1RG/X0tARMyVdDRwM9AKXBgRk2p5DkVE\nLfMzM7Mu5OYXM7Mm4qBuZtZEHNSXYpJC0iVF690kzZB0fYXjhhX2kfT1Src6S3qgNiVuXvm9OLNo\n/VhJwyscs0d7dyNKGp7zXLco7Yc5rWzXRUl3FfaRdKOkvmX2PULSQeXysyXLQX3p9h6wkaReeX0n\nOti9KiJGR8RpFfbZdhHLtzT5ENhTqvomF4A9SLeat2ciqXdFwd5Ahy7KRcRuEfFWme1/ioiLOpKn\ndS4HdbsR+Gpe3h+4vLBB0paSHpT0mKQHJK1ferCkQySdm5cHSBolaXx+bJvT383/S9JvJT0haaKk\nfXP6/Jp/Xj9X0iF5+TRJT0qaIOmMznkJ6sJcUg+UY0o3SBos6Y78Gtwuac382n4d+K2kxyWt00ae\nfyffgp63z6borlFJ50saI2mSpJPaKpSkqYUvGkkH5TKMl3RxThsu6di8vKmkh/I+oyStmNOLa/79\nJE3Ny0MlPZLLP0HSkEV65WwhDup2BbCfpJ7AxsDDRdsmA9tFxGbAL4BfV8jrHODuiNgE2JxP1gr3\nBDYFNgG+TApIA9vLTNLKwDeAoRGxMfCrqp9VYzoPOEBSn5L0PwAj82twKXBORDxA6t98XERsGhHP\ntZHf28DLkjYi1divLNn+83wX6cbAFyVt3F7BJA0FTgR2yO/vD9rY7SLg+FzOicAvKzzfI4DfR8Sm\nwBakW+ZtMTmoL+UiYgIwmFRLv7Fkcx/gaklPAGcBQytktwNwfs53XkTMLtn+BeDyvO114G7gc2Xy\nmw18AFwgaU/g/crPqHFFxNukwPj9kk3bAJfl5YtJr2O1riAF9D2AUSXb9pE0DniM9N6Wa8rZAbg6\nImbmsv6reGP+IuobEXfnpJHA9hXK9iDwM0nHA5+KiDlVPB+rwEHdINX4zqCo6SU7BbgzIjYC/gPo\n2Unnn8vCn8WekG7UII1q9zfga8BNnXT+enI2cBiwXI3yux44EHgpf2kAIGkt4Fhgx1yzvoEl8/7O\nP0dEXEZqQpoD3Chph046/1LFQd0ALgROioiJJel9WHDh9JAq8rkd+C6kcaPbaEa4F9g3b+tPqsk9\nArwIbCipR+5psWPOY3mgT0TcSGpr3qTDz6zB5BrwVaTAXvAACy54HkB6HQHeAXpXyO994Hjg1JJN\nK5AulM+WNIA0vnc5dwB75yYxJK1Ucp7ZwJuStstJB5J+iQFMBT6bl/cqHCNpbeD5iDgHuI7UDGSL\nyUHdiIhX8h9WqdOB/5H0GNUNKfED4EuSJgJj+eTP+VHABGA8KUj8JCKmR8TLpED2RP7/sbx/b+B6\nSROA+4AfdeyZNawzSUPhFnwPODS/DgeyoD37CuC4fCG7rQulAETEFRExriRtPOl1nkxq2rm/XIHy\nreynAndLGg/8ro3dDiZdJ5lAunZyck4/A/hu/hwVP699gCckPQ5sRGp6ssXkYQLMzJqIa+pmZk3E\nQd3MrIk4qJuZNREHdTOzJuKgbmbWRBzUra5JmpfHBnlC0tWSll2MvP4qaa+8/H/tjXCYtw8rjF3T\nwXPMHyulmvSSfd7t4Lnmj7tiVuCgbvVuTh7bZCPgI9J4IfNJWqQpGSPiWxHxZJldhgEeXdIajoO6\nNZJ7gXVzLfpeSaOBJ/Mdqr+V9Gge7e87MH9UyHMlPS3pNmCVQkYlIwfuImlcHn3wdkmDSV8ex+Rf\nCdtJ6i/pmnyORyV9Ph+7sqRb8kiH/weo0pOQ9HdJY/Mxh5dsOyun357vukXSOpJuysfcK2mDWryY\n1pw88bQ1hFwj35UF479sDmwUES/kwDg7Ij4nqQdwv6RbgM2A9Ul3tg4AniQNiVCcb3/gz8D2Oa+V\nIuJfkv4EvBsRZ+T9LgPOioj7JK1Jmjj406SRCO+LiJMlfZWFb+9vz3/nc/QCHpV0TUTMIo33MiYi\njpH0i5z30aQheY+IiGclbQX8kTTAltknOKhbveuVbyOHVFO/gNQs8khEvJDTdwY2LrSXk8asGUIa\nW+byiJgHvCrpjjby3xq4p5BX6eiDRb5MGp+msL5CHptme9KQwkTEDZLerOI5fV/SN/LyoFzWWcDH\nLBge9xLg2nyObUmjZRaO71HFOWwp5aBu9W5OHm97vhzc3itOAr4XETeX7LdbDcvRAmwdER+0UZaq\nSRpG+oLYJiLel3QX7Y+OGPm8b5W+BmbtcZu6NYObSQNGdQeQtJ6k5YB7WDAq5EDgS20c+xCwfR6K\ntnj0wdIREG8hDaxF3q8QZO8BvpnTdgVWrFDWPsCbOaBvQPqlUNDCglEMv0lq1nkbeEHS3vkcktT0\no1XaonNQt2bwf6T28nFKE3r8L+lX6Cjg2bztItKkDAuJiBnA4aSmjvEsaP74B/CNwoVS0sQVW+QL\nsU+yoBfOSaQvhUmkZpiXKpT1JqCbpKeA00hfKgXvAVvm57ADC0Y5PAA4LJdvEnmKOrO2eJRGM7Mm\n4pq6mVkTcVA3M2siDupmZk3EQd3MrIk4qJuZNREHdTOzJuKgbmbWRP4/cBztpBz8xLYAAAAASUVO\nRK5CYII=\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAXIAAAEWCAYAAAB7QRxFAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjEsIGh0\ndHA6Ly9tYXRwbG90bGliLm9yZy+j8jraAAAgAElEQVR4nO3debxd873/8df7nCAhEkNIVRIxX5Ia\nIiiK1HQNralqqNK0ehVX9eo114+YWjXcKtJqDBcxRKghJReteZaJkJQ2IjJQEiKmIMPn98f6nmRn\nO2fvfZJzzt7r5P30WA9rre93fdd37X3y2d/9Xev73YoIzMwsv+qqXQEzM1s2DuRmZjnnQG5mlnMO\n5GZmOedAbmaWcw7kZmY550BuVSHpcUk/TetHSnq4hcvvLSkkdWjJcsucU5L+V9JsSS8uQzk7S3q9\nJetWLZJ6SfpEUn2169KeOZC3U5KmSHpP0ioF+34q6fEqVqtREXFrROxV7Xq0gG8BewI9ImK7pS0k\nIp6KiE1brlqtI/2N7VEqT0RMjYjOEbGgreq1PHIgb9/qgV8sayGppem/lfLWA6ZExKfVrkgtaMtv\nQ8s7/+Ns3y4FTpG0WmOJknaUNErSnPT/HQvSHpd0kaRngM+ADVJXxQmS/inpY0kXSNpQ0rOSPpI0\nXNKK6fjVJd0vaWbqarhfUo8m6jFQ0tNp/bT0VbxhmSfpxpTWVdL1kt6RNEPShQ1f2SXVS7pM0ixJ\nk4H9Sr0wknpKujvV731JV6f9dZLOlvRW+kZzs6SuKa2hu+ZHkqamc/0qpR0DXAfskOp9XuF1FZw3\nJG2U1veVNDG9ljMknZL2D5A0veCYzdL78aGkCZL2L0i7UdJgSQ+kcl6QtGET19xQ/x9Lmpbel+Mk\nbStpfCr/6oL8G0p6NL0+syTd2vC3JGko0Av4S7re0wrKP0bSVODRgn0dJK0habqk76YyOkuaJOno\nUu+VVSAivLTDBZgC7AHcDVyY9v0UeDytrwHMBo4COgBHpO01U/rjwFSgT0pfAQjgPqBL2v8F8Aiw\nAdAVmAj8KB2/JvA9YGVgVeBO4N6C+j0O/DStDwSebuQaegJvA/uk7XuAPwGrAGsDLwI/S2nHAa+l\nY9YAHkv17dBIufXAy8DvUlkdgW+ltJ8Ak9I1dU6v39CU1juVeS3QCdgyvQabNXYdjV1XOn6jtP4O\n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\nN3bKxhIAAAAASUVORK5CYII=\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "outputId": "e32ba913-8812-4f5e-e783-3ba1a8f5eeca",
        "id": "gtZtl84ykEls",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 298
        }
      },
      "source": [
        "print(\"--------------------------------------------------- ROC Curve: \" + \"Random Forest Classifier\")\n",
        "auc = roc_auc_score(y_test, y_pred)\n",
        "print('AUC:' + str(auc))\n",
        "fpr, tpr, thresholds = roc_curve(y_test, y_pred)\n",
        "plt.plot([0, 1], [0, 1], linestyle='--')\n",
        "plt.plot(fpr, tpr, marker='.')\n",
        "plt.show()"
      ],
      "execution_count": 153,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "--------------------------------------------------- ROC Curve: Random Forest Classifier\n",
            "AUC:0.9943820224719101\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "xBtcfjYakLeN",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": 0,
      "outputs": []
    }
  ]
}
